//
// Generated by JTB 1.2.2
//

package org.postgresql.stado.parser.core.syntaxtree;

/**
 * Grammar production:
 * f0 -> <EXEC_>
 * f1 -> <DIRECT_>
 * f2 -> <ON_>
 * f3 -> ( <ALL_> | ( <NODE_> | <NODES_> ) <INT_LITERAL> ( "," <INT_LITERAL> )* )
 * f4 -> <STRING_LITERAL>
 */
public class ExecDirect implements Node {
   public NodeToken f0;
   public NodeToken f1;
   public NodeToken f2;
   public NodeChoice f3;
   public NodeToken f4;

   public ExecDirect(NodeToken n0, NodeToken n1, NodeToken n2, NodeChoice n3, NodeToken n4) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
   }

   public ExecDirect(NodeToken n0, NodeChoice n1) {
      f0 = n0;
      f1 = new NodeToken("DIRECT");
      f2 = new NodeToken("ON");
      f3 = n1;
      f4 = new NodeToken("'");
   }

   public void accept(org.postgresql.stado.parser.core.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(org.postgresql.stado.parser.core.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

