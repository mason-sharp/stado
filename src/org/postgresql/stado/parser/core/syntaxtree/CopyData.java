//
// Generated by JTB 1.2.2
//

package org.postgresql.stado.parser.core.syntaxtree;

/**
 * Grammar production:
 * f0 -> <COPY_>
 * f1 -> ( TableName(prn) [ ColumnNameListWithParenthesis(prn) ] | <PARENTHESIS_START_> Select(prn) <PARENTHESIS_CLOSE_> )
 * f2 -> ( <FROM_> ( <STDIN_> | <STRING_LITERAL> ) | <TO_> ( <STDOUT_> | <STRING_LITERAL> ) )
 * f3 -> [ [ <WITH_> ] ( FormatDefOIDS(prn) | FormatDefDelimiter(prn) | FormatDefNull(prn) | FormatDefCSV(prn) )+ ]
 */
public class CopyData implements Node {
   public NodeToken f0;
   public NodeChoice f1;
   public NodeChoice f2;
   public NodeOptional f3;

   public CopyData(NodeToken n0, NodeChoice n1, NodeChoice n2, NodeOptional n3) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
   }

   public CopyData(NodeChoice n0, NodeChoice n1, NodeOptional n2) {
      f0 = new NodeToken("COPY");
      f1 = n0;
      f2 = n1;
      f3 = n2;
   }

   public void accept(org.postgresql.stado.parser.core.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(org.postgresql.stado.parser.core.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

