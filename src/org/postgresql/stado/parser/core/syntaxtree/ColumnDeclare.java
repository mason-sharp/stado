//
// Generated by JTB 1.2.2
//

package org.postgresql.stado.parser.core.syntaxtree;

/**
 * Grammar production:
 * f0 -> Identifier(prn)
 * f1 -> types()
 * f2 -> [ <NOT_> <NULL_> | <NULL_> ]
 * f3 -> [ DefaultSpec(prn) ]
 * f4 -> [ <PRIMARYKEY_> ]
 * f5 -> [ <CHECK_> <PARENTHESIS_START_> SQLComplexExpression(prn) <PARENTHESIS_CLOSE_> ]
 */
public class ColumnDeclare implements Node {
   public Identifier f0;
   public types f1;
   public NodeOptional f2;
   public NodeOptional f3;
   public NodeOptional f4;
   public NodeOptional f5;

   public ColumnDeclare(Identifier n0, types n1, NodeOptional n2, NodeOptional n3, NodeOptional n4, NodeOptional n5) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
   }

   public void accept(org.postgresql.stado.parser.core.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(org.postgresql.stado.parser.core.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

