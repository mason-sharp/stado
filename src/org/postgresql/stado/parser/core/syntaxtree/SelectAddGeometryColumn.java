//
// Generated by JTB 1.2.2
//

package org.postgresql.stado.parser.core.syntaxtree;

/**
 * Grammar production:
 * f0 -> <SELECT_>
 * f1 -> <ADDGEOMETRYCOLUMN_>
 * f2 -> <PARENTHESIS_START_>
 * f3 -> SQLArgument(prn)
 * f4 -> ","
 * f5 -> SQLArgument(prn)
 * f6 -> ","
 * f7 -> SQLArgument(prn)
 * f8 -> ","
 * f9 -> SQLArgument(prn)
 * f10 -> ","
 * f11 -> SQLArgument(prn)
 * f12 -> [ "," SQLArgument(prn) ]
 * f13 -> [ "," SQLArgument(prn) ]
 * f14 -> <PARENTHESIS_CLOSE_>
 */
public class SelectAddGeometryColumn implements Node {
   public NodeToken f0;
   public NodeToken f1;
   public NodeToken f2;
   public SQLArgument f3;
   public NodeToken f4;
   public SQLArgument f5;
   public NodeToken f6;
   public SQLArgument f7;
   public NodeToken f8;
   public SQLArgument f9;
   public NodeToken f10;
   public SQLArgument f11;
   public NodeOptional f12;
   public NodeOptional f13;
   public NodeToken f14;

   public SelectAddGeometryColumn(NodeToken n0, NodeToken n1, NodeToken n2, SQLArgument n3, NodeToken n4, SQLArgument n5, NodeToken n6, SQLArgument n7, NodeToken n8, SQLArgument n9, NodeToken n10, SQLArgument n11, NodeOptional n12, NodeOptional n13, NodeToken n14) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
      f8 = n8;
      f9 = n9;
      f10 = n10;
      f11 = n11;
      f12 = n12;
      f13 = n13;
      f14 = n14;
   }

   public SelectAddGeometryColumn(SQLArgument n0, SQLArgument n1, SQLArgument n2, SQLArgument n3, SQLArgument n4, NodeOptional n5, NodeOptional n6) {
      f0 = new NodeToken("SELECT");
      f1 = new NodeToken("ADDGEOMETRYCOLUMN");
      f2 = new NodeToken("(");
      f3 = n0;
      f4 = new NodeToken(",");
      f5 = n1;
      f6 = new NodeToken(",");
      f7 = n2;
      f8 = new NodeToken(",");
      f9 = n3;
      f10 = new NodeToken(",");
      f11 = n4;
      f12 = n5;
      f13 = n6;
      f14 = new NodeToken(")");
   }

   public void accept(org.postgresql.stado.parser.core.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(org.postgresql.stado.parser.core.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

