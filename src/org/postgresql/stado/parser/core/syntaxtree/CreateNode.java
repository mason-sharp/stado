//
// Generated by JTB 1.2.2
//

package org.postgresql.stado.parser.core.syntaxtree;

/**
 * Grammar production:
 * f0 -> <CREATE_NODE_>
 * f1 -> <FOR_>
 * f2 -> Identifier(prn)
 * f3 -> [ [ <WITH_> ] ( FormatDefPort(prn) | FormatDefUser(prn) | FormatDefPassword(prn) )+ ]
 */
public class CreateNode implements Node {
   public NodeToken f0;
   public NodeToken f1;
   public Identifier f2;
   public NodeOptional f3;

   public CreateNode(NodeToken n0, NodeToken n1, Identifier n2, NodeOptional n3) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
   }

   public CreateNode(NodeToken n0, Identifier n1, NodeOptional n2) {
      f0 = n0;
      f1 = new NodeToken("FOR");
      f2 = n1;
      f3 = n2;
   }

   public void accept(org.postgresql.stado.parser.core.visitor.Visitor v) {
      v.visit(this);
   }
   public Object accept(org.postgresql.stado.parser.core.visitor.ObjectVisitor v, Object argu) {
      return v.visit(this,argu);
   }
}

